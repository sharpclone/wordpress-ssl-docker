version: '3'

services:
  db:
    image: mariadb
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes: 
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - private

  wordpress:
    depends_on: 
      - db
    image: wordpress:6.1.1-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - ./wordpress:/var/www/html
      - ./wordpress/.htaccess:/var/www/html/.htaccess
    networks:
      - app-network
      - private

  webserver:
    depends_on:
      - wordpress
    image: nginx:stable
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - app-network

 certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./wordpress:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    environment:
    # Dont't need these..They should be run once,not at every restart
    #   - STAGING=false # if first cert. fails use staging environment to avoid getting timeout
    # command: certonly --webroot --webroot-path=/var/www/certbot --email $EMAIL --agree-tos --no-eff-email -d $DOMAIN
    depends_on:
      - webserver

volumes:
  wordpress:
  dbdata:
  letsencrypt:

networks:
  app-network:
    driver: bridge  
  private:
