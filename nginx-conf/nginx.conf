#For simplicity just replace all the example.com with your domain name
#AFTER GETTING CERTIFICATE UNCOMMENT ALL THE COMMENTED LINES AND REMOVE THE LINE ABOVE LISTEN 443


#server {
#    listen 80;
#    listen [::]:80;
#    server_name examle.com;

    # Prevent nginx HTTP Server Detection
#    server_tokens off;

   # Enforce HTTPS
#    return 301 https://$server_name$request_uri;
#}


server {
        listen 80; #REMOVE LINE AFTER OBTAINING THE CERT.
#        listen 443      ssl http2;
#        listen [::]:443 ssl http2;

        server_name example.com;
        server_tokens off;
#        ssl_certificate     /etc/nginx/ssl/live/example.com/fullchain.pem;
#        ssl_certificate_key /etc/nginx/ssl/live/example.com/privkey.pem;


        index index.php index.html index.htm;

        root /var/www/html;

        # set max upload size and increase upload timeout:
        client_max_body_size 10G;
        client_body_timeout 300s;
        fastcgi_buffers 64 4K;


        location / {
                try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass wordpress:9000;
#                fastcgi_param HTTPS on;

                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;

                fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
                fastcgi_param front_controller_active true;     # Enable pretty urls

                fastcgi_intercept_errors on;
                fastcgi_request_buffering off;
        }

        location ~ /\.ht {
                deny all;
        }
        
        location = /favicon.ico { 
                log_not_found off; access_log off; 
        }
        location = /robots.txt { 
                log_not_found off; access_log off; allow all; 
        }
        location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
                expires max;
                log_not_found off;
        }


        #Configs for .well-known aka getting the certificate
        location ^~ /.well-known {
                # The rules in this block are an adaptation of the rules
                # in `.htaccess` that concern `/.well-known`.

                location = /.well-known/carddav { return 301 /remote.php/dav/; }
                location = /.well-known/caldav  { return 301 /remote.php/dav/; }

                location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
                location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

                return 301 /index.php$request_uri;
        }
}

